"""
Este ejercicio consiste en la construcci√≥n de una biblioteca con los siguientes requisitos:
1.	Mantener un registro de los libros en la biblioteca, incluyendo informaci√≥n como t√≠tulo, autor, g√©nero y disponibilidad.
2.	Permitir a los usuarios:
‚Ä¢	Consultar la lista de libros disponibles.
‚Ä¢	Tomar prestado un libro si est√° disponible.
‚Ä¢	Devolver un libro prestado.
3.	Implementar un sistema de autenticaci√≥n para los usuarios, donde se les pide que ingresen un nombre de usuario y una contrase√±a para acceder a las funciones de pr√©stamo y devoluci√≥n de libros.
4.	Registrar el historial de pr√©stamos de cada usuario, incluyendo la fecha en que tomaron prestado un libro y la fecha en que lo devolvieron.
5.	Proporcionar informaci√≥n detallada sobre los libros, como la cantidad de ejemplares disponibles y la informaci√≥n del autor

"""
import csv,sys
import datetime
catalogo=[]
base_datos_usuarios=[]



with open ('biblioteca.csv','r',encoding='utf-8',newline="") as archivo_csv:
    lector_csv=csv.DictReader(archivo_csv)
    for fila in lector_csv:
        catalogo.append(fila)

with open ('usuario.csv','r',encoding='utf-8',newline="") as archivo_csv:
    lector_csv=csv.DictReader(archivo_csv)
    for fila in lector_csv:
        base_datos_usuarios.append(fila)

def main():
    global usuario
    global base_datos_usuarios
    usuario=login()
    biblio()
    
def biblio():    
    if usuario:
        print (f"\nBienvenido a la bibliotecaüìöüìöüìö, {usuario['Nombre']}")
    else:
        print ("\nBienvenido a la biblioteca üìöüìöüìö\n Recuerda que para retirar o devolver un libro, es necesario estar registrado. ")
    bibliotecaria=input("¬øQu√© operaci√≥n te gustar√≠a realizar?:\
                         \n 1. Retirar üìó‚Ü™Ô∏è\
                         \n 2. Devolver ‚Ü©Ô∏èüìï\
                         \n 3. Consultar üîç\
                         \n 4. Donarüíô\
                         \n 5. Atr√°s ‚è™\
                         \n 6. Salir üö™\n")
    if usuario and bibliotecaria=="1":
        tomar_prestado(usuario)
    elif usuario and bibliotecaria=="2":
        devolver()
    elif bibliotecaria=="3": 
        consulta()
    elif bibliotecaria=="4": 
        donar()
    elif bibliotecaria=="5":
        main()
    elif bibliotecaria=="6":
        sys.exit("¬°Hasta pronto!üëãüëãüëã")
    else:
        print ("‚õîPermisos insuficientes. Reg√≠strate o crea una cuenta de usuario")
        main()

def tomar_prestado(usuario):
    if usuario['Libros Retirados'] != "Sin libros retirados":
        print (f"‚ö†Ô∏è   \n En este momento no es posible retirar m√°s libros. \n Recuerda que tienes pendiente de entrega {usuario['Libros Retirados']}")
        siguiente()
    peticion = input("¬øQu√© libro quieres retirar?: ")
    busqueda = False
    for libro in catalogo:
        if peticion == libro["T√≠tulo"] and libro["Disponibilidad"] == "True" and usuario["Libros Retirados"]=="Sin libros retirados":
            busqueda = True
            libro["Disponibilidad"] = "False"
            reescribir_csv()
            usuario["Libros Retirados"] = libro["T√≠tulo"]
            usuario["Fecha Retirada"]=datetime.date.today()
            usuario["Fecha Devoluci√≥n"]=usuario["Fecha Retirada"]+datetime.timedelta(days=15)

            reescribir_usuario(base_datos_usuarios)
            print(f"üìö Acabas de sacar {libro['T√≠tulo']}.\n \
            Recuerda devolver el libro antes del {usuario['Fecha Devoluci√≥n']}üìÖ")
            break
        elif peticion.lower() in libro["T√≠tulo"].lower():
            verificar = input(f"Quiz√°s quer√≠a referirse a: {libro['T√≠tulo']}.\n Escriba 'S√≠' para confirmar: \n ")
            if verificar.lower() == "s√≠" or verificar.lower() == "si":
                print("C√ìDIGO PENDIENTE DE CORREGIR")
            else:
                pass

        elif peticion == libro["T√≠tulo"] and libro["Disponibilidad"] == "False":
            busqueda = True
            print("‚ö†Ô∏è   Libro no disponible ‚ùï \n")
        
    if busqueda==False:
        print("‚ö†Ô∏è   El libro no existe \n")

    siguiente()
    

def devolver():
    devolucion=False
    peticion=input("¬øQu√© libro quieres devolver? ")
    for libro in catalogo:
        if peticion == usuario["Libros Retirados"]:
            libro["Disponibilidad"]="True"
            usuario["Libros Retirados"]="Sin libros retirados"
            usuario["Fecha Retirada"]=None
            usuario["Fecha Devoluci√≥n"]=None
            print ("El libro se ha devuelto exitosamente\n")
            reescribir_csv()
            reescribir_usuario(base_datos_usuarios)
            devolucion=True
    if not devolucion:
        print ("El libro mencionado no forma parte de nuestra biblioteca \n")
    siguiente()

def consulta():
    peticion=input("Introduzca cualquier palabra clave: ")
    resultado=False
    for libro in catalogo:
        if peticion in libro["T√≠tulo"]:
            print (f"-{libro['T√≠tulo']} de {libro['Autor']}")
            resultado=True
        elif peticion in libro["Autor"]:
            print (f"-{libro['T√≠tulo']} de {libro['Autor']}")
            resultado=True
        elif peticion in libro["G√©nero"]:
            print (f"G√âNERO {libro['G√©nero'].upper()}: {libro['T√≠tulo']} de {libro['Autor']}")
            resultado=True
    if resultado==False:
        print("No hay resultados en esta b√∫squeda\n")
    siguiente()
    

def donar():
    donacion={}
    donacion["T√≠tulo"]= input("T√≠tulo: ")
    donacion["Autor"]= input("Autor: ")
    donacion["G√©nero"]= input("G√©nero: ")
    donacion["Disponibilidad"]= True
    catalogo.append(donacion)
    reescribir_csv()
    siguiente()

def reescribir_csv():
    with open ("biblioteca.csv", "w",encoding='utf-8',newline="") as archivo_csv:
        encabezados=["T√≠tulo","Autor","G√©nero","Disponibilidad"]
        escritor_csv=csv.DictWriter(archivo_csv,fieldnames=encabezados)
        escritor_csv.writeheader()

        for fila in catalogo:
            escritor_csv.writerow(fila)

def reescribir_usuario(base_datos_usuarios):
    with open("usuario.csv", "w", encoding='utf-8', newline="") as archivo_csv:
        encabezados = ["Nombre", "Contrase√±a", "Libros Retirados", "Fecha Retirada", "Fecha Devoluci√≥n"]
        escritor_csv = csv.DictWriter(archivo_csv, fieldnames=encabezados)
        escritor_csv.writeheader()
        
        for usuario in base_datos_usuarios:
            escritor_csv.writerow(usuario)

def login():
    global base_datos_usuarios
    registro=input(" 1. Nuevo usuario \n 2. Iniciar sesi√≥n \n 3. Entrar sin registrar \n ")
    match registro:
        case "1":
            usuario = new_user() 
            return usuario       
        case "2":
            name= input ("Introduzca un nombre de Usuario: ")
            password= input ("Introduzca contrase√±a: ")
            usuario= iniciar_sesion(name,password,base_datos_usuarios) 
            return usuario
        case "3":
            usuario=False
            return usuario


def una_mayuscula(cadena):
    for letra in cadena:
        if letra.isupper():
            return False
        else:
            return True
        
def iniciar_sesion(name,password,base_datos_usuarios):
    usuario=None
    for usuario in base_datos_usuarios:
        if name == usuario["Nombre"] and password== usuario["Contrase√±a"]:
            return usuario     
    if not usuario:
        print ("Usuario o contrase√±a incorrecta \n")
        usuario=None
        login()   

def new_user():
    global base_datos_usuarios
    nuevo_usuario = {}
    while True:
        nuevo_usuario["Nombre"] = input("Introduzca un nombre de Usuario: ")
        nuevo_usuario["Contrase√±a"] = input("Crear nueva contrase√±a: ")
        nuevo_usuario["Libros Retirados"] = "Sin libros retirados"
        nuevo_usuario["Fecha Retirada"] = None
        nuevo_usuario["Fecha Devoluci√≥n"] = None
        if len(nuevo_usuario["Contrase√±a"]) < 4 or not any(c.isupper() for c in nuevo_usuario["Contrase√±a"]):
            print("La contrase√±a debe tener m√°s de 4 caracteres y contener al menos una may√∫scula")
        else:
            nombres_usuarios = [user["Nombre"] for user in base_datos_usuarios]
            if nuevo_usuario["Nombre"] in nombres_usuarios:
                print("El nombre de usuario ya est√° en uso. Elija otro.")
            else:
                base_datos_usuarios.append(nuevo_usuario)
                with open("usuario.csv", "w", encoding='utf-8', newline="") as archivo_csv:
                    encabezados = ["Nombre", "Contrase√±a", "Libros Retirados", "Fecha Retirada", "Fecha Devoluci√≥n"]
                    escritor_csv = csv.DictWriter(archivo_csv, fieldnames=encabezados)
                    escritor_csv.writeheader()

                    for fila in base_datos_usuarios:
                        escritor_csv.writerow(fila)
                return nuevo_usuario

def siguiente():
    transicion=input("¬øTe gustar√≠a realizar alguna otra operaci√≥n? \n 1. S√≠ \n 2. No \n")
    match transicion:
        case "1":
            biblio()
        case "2":
            sys.exit("¬°Hasta pronto!üëãüëãüëã")


if __name__=="__main__":
    main()